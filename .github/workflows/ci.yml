name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: quickfund_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies (npm workspaces)
        run: npm install

      - name: Setup test environment
        run: |
          cd backend
          echo "DATABASE_URL=\"postgresql://postgres:password@localhost:5432/quickfund_test\"" > .env
          echo "REDIS_URL=\"redis://localhost:6379\"" >> .env
          echo "JWT_SECRET=\"test-secret\"" >> .env
          echo "NODE_ENV=test" >> .env

      - name: Run database migrations
        run: |
          cd backend
          npx prisma generate
          npx prisma migrate deploy

      - name: Build backend
        run: npm run build --workspace=backend

      - name: Build frontend
        run: npm run build --workspace=quickFund

      - name: Lint backend
        run: npm run lint --workspace=backend

      - name: Lint frontend
        run: npm run lint --workspace=quickFund

      - name: Test backend (if tests exist)
        run: |
          cd backend
          npm test || echo "No tests found, skipping"
        continue-on-error: true

      - name: Test frontend (if tests exist)
        run: |
          cd quickFund
          npm test || echo "No tests found, skipping"
        continue-on-error: true

      - name: Build Docker images
        run: |
          docker build -t quickfund-backend:ci ./backend
          docker build -t quickfund-frontend:ci ./quickFund

      - name: Test Docker Compose
        run: |
          # Create test docker-compose file
          cat > docker-compose.test.yml << EOF
          version: '3.8'
          services:
            backend:
              image: quickfund-backend:ci
              environment:
                DATABASE_URL: "postgresql://postgres:password@postgres:5432/quickfund_test"
                REDIS_URL: "redis://redis:6379"
                JWT_SECRET: "test-secret"
                NODE_ENV: test
              depends_on:
                postgres:
                  condition: service_healthy
                redis:
                  condition: service_healthy
              ports:
                - "3001:3001"
            frontend:
              image: quickfund-frontend:ci
              depends_on:
                - backend
              ports:
                - "3000:3000"
          EOF
          
          # Test that containers start successfully
          timeout 60s docker-compose -f docker-compose.test.yml up --abort-on-container-exit || true

      # Optionally, push Docker images to a registry
      # - name: Log in to DockerHub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      #
      # - name: Push backend image
      #   run: docker push <your-dockerhub-username>/quickfund-backend:ci
      #
      # - name: Push frontend image
      #   run: docker push <your-dockerhub-username>/quickfund-frontend:ci 